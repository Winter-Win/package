1、年会抽奖
https://www.nowcoder.com/questionTerminal/610e6c0387a0401fb96675f58cda8559

今年公司年会的奖品特别给力，但获奖的规矩却很奇葩：
1. 首先，所有人员都将一张写有自己名字的字条放入抽奖箱中；
2. 待所有字条加入完毕，每人从箱中取一个字条；
3. 如果抽到的字条上写的就是自己的名字，那么“恭喜你，中奖了！”
现在告诉你参加晚会的人数，请你计算有多少概率会出现无人获奖？

输入描述:
输入包含多组数据，每组数据包含一个正整数n（2≤n≤20）。


输出描述:
对应每一组数据，以“xx.xx%”的格式输出发生无人获奖的概率。
示例1
输入
2
输出
50.00%

#include <iostream>
#include <cstdio>
int main()
{
    long long d[22] = { 0, 0, 1 }; // 错排数量，预留第一项为0，配合下文中输入的n
    long long f[22] = { 0, 1, 2 }; // 阶 乘
    for (int i = 3; i < 22; i++)
    {
        d[i] = (i - 1) * (d[i - 1] + d[i - 2]); //错排的递推公式
        f[i] = i * f[i - 1]; //阶乘的递推公式
    }
    int n;
    while (std::cin >> n)
    {
        printf("%.2f%%\n", 100.0 * d[n] / f[n]); //用100.0来把结果处理成double，保留两位小数
    }
    return 0;
}



2、被3整除
题目描述
小Q得到一个神奇的数列: 1, 12, 123,...12345678910,1234567891011...。

并且小Q对于能否被3整除这个性质很感兴趣。

小Q现在希望你能帮他计算一下从数列的第l个到第r个(包含端点)有多少个数可以被3整除。

输入描述:
输入包括两个整数l和r(1 <= l <= r <= 1e9), 表示要求解的区间两端。
输出描述:
输出一个整数, 表示区间内能被3整除的数字个数。
示例1
输入
复制
2 5
输出
复制
3
说明
12, 123, 1234, 12345...
其中12, 123, 12345能被3整除。

/*
l<-->r 1  12  123  1234  12345  123456  1234567 ...
l----> 1   2    3     4      5       6        7 ...
l%3--> 1   2    0     1      2       0        1 ...
count->0   1    1     0      1       1        0 ...
*/

#include <iostream>

int main()
{
    int l, r;
    while(std::cin >> l >> r)
    {
        int count = 0;
        for(; l <= r; ++l)
            if(l % 3 == 2 || l % 3 == 0)
                count++;
        std::cout << count << std::endl;
    }
    return 0;
}